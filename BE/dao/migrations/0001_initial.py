# Generated by Django 4.2.11 on 2024-06-17 15:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=64)),
                ('last_name', models.CharField(blank=True, max_length=64)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['email'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name', max_length=255)),
                ('description', models.CharField(blank=True, default='', help_text='Description', max_length=1023)),
                ('type', models.CharField(help_text='The type of the attribute like string, boolean, list(string), and so on.', max_length=32)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Attributes',
                'db_table': 'attributes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.CharField(help_text='The input given to the llm.', max_length=4096)),
                ('output', models.CharField(help_text='The output generated by the llm.', max_length=2048)),
                ('field_of_activity', models.CharField(help_text='The field of activity for the mapping.', max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Memories',
                'db_table': 'memories',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='MappingTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name', max_length=255)),
                ('description', models.CharField(blank=True, default='', help_text='Description', max_length=1023)),
                ('field_of_activity', models.CharField(help_text='The field of activity for the mapping.', max_length=64)),
                ('attributes', models.ManyToManyField(related_name='templates', to='dao.attribute')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Mapping Templates',
                'db_table': 'mapping_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MappingSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_of_activity', models.CharField(help_text='The field of activity for the mapping.', max_length=64)),
                ('number_of_attribute_values', models.IntegerField(help_text='The number of attribute values retrieved for each attribute.')),
                ('use_descriptions', models.BooleanField(default=False)),
                ('number_of_memory_values', models.IntegerField(help_text='The number of memory values retrieved for each attribute.')),
                ('use_check_prompt', models.BooleanField(default=False)),
                ('attributes', models.ManyToManyField(related_name='setups', to='dao.attribute')),
                ('mapping_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dao.mappingtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Mapping Setups',
                'db_table': 'mapping_setups',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='DbSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_attribute_values', models.BooleanField(default=False)),
                ('use_memory', models.BooleanField(default=False)),
                ('attribute_file', models.FileField(upload_to='uploaded_attributes/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['json'])])),
                ('attribute_values_file', models.FileField(blank=True, null=True, upload_to='sample/uploaded_attribute_values/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['json'])])),
                ('memory_file', models.FileField(blank=True, null=True, upload_to='sample/uploaded_memories/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['json'])])),
                ('field_of_activity', models.CharField(blank=True, help_text='The field of activity for the mapping.', max_length=64, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Database Setups',
                'db_table': 'db_setups',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name', max_length=255)),
                ('description', models.CharField(blank=True, default='', help_text='Description', max_length=1023)),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dao.attribute')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Attribute Values',
                'db_table': 'attribute_values',
                'ordering': ['name'],
            },
        ),
    ]
